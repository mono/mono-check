#!/bin/bash
#
# Checks whether apache is installed from RPM
#
APACHE2CTL=""
APACHE2_CONFIG_DIR=""

function __find_apache2ctl ()
{
    if [ -n "$APACHE2CTL" ]; then
	return 0
    fi

    APACHE2CTL=`which apache2ctl 2> /dev/null`
    if [ ! -x "$APACHE2CTL" ]; then
	APACHE2CTL=/usr/sbin/apache2ctl
	if [ ! -x "$APACHE2CTL" ]; then
	    failure apache2ctl missing
	    APACHE2CTL=""
	    return 1
	fi
    fi

    return 0
}

function __find_apache2_config_dir ()
{
    if [ -n "$APACHE2_CONFIG_DIR" ]; then
	return 0
    fi

    local tmp
    if ! __find_apache2ctl; then
	return 1
    fi

    tmp=`$APACHE2CTL -V|grep SERVER_CONFIG_FILE|cut -d '=' -f 2|tr -d '"' 2> /dev/null`
    if [ -z "$tmp" -o ! -f "$tmp" ]; then
	failure Unable to determine Apache configuration directory
	return 1
    fi

    APACHE2_CONFIG_DIR="`dirname $tmp`"
    return 0
}

function check_suse_00_apache_00_installed ()
{
    checking Whether Apache v2 package is installed

    if rpm_package_exists apache2; then
	success Apache v2 package installed
    else
	failure Apache v2 package missing
    fi
}

function check_suse_00_apache_01_mpm ()
{
    local tmp
    local mpm
    local warn=0

    checking Which Apache MPM is used
    
    tmp=`/usr/share/apache2/find_mpm 2> /dev/null`
    if [ -z "$tmp" ]; then
	failure Unable to determine the Apache MPM
	return
    fi

    
    case $tmp in
	*-prefork) mpm="prefork"; warn=1 ;;
	*-worker) mpm="worker"; warn=0 ;;
	*) mpm=`basename $tmp`
	   mpm=`cut -d '-' -f 2`
	   warn=2 ;;
    esac

    case $warn in
	0) success Apache MPM ${COLOR_BOLD}${mpm}${COLOR_RESET} is used ;;
	1) warning "Apache MPM ${COLOR_BOLD}${mpm}${COLOR_RESET} is in use while ${COLOR_BOLD}${RECOMMENDED_MPM}${COLOR_RESET} is recommended" ;;
	2) warning "Unknown Apache MPM ${COLOR_BOLD}${mpm}${COLOR_RESET} is in use but ${COLOR_BOLD}${RECOMMENDED_MPM}${COLOR_RESET} is recommended" ;;
	*) failure Internal error
    esac
}

#
# Checks whether apache configuration is where it is expected to be
#
function check_suse_00_apache_02_configuration_location ()
{
    local path
    local msg
    checking Whether Apache configuration can be found and has correct syntax
    
    if ! __find_apache2ctl ; then
	return
    fi

    msg="`$APACHE2CTL -t 2>&1`"
    if [ $? -eq 0 ]; then
	success Configuration found and syntax correct
    else
	failure "Configuration not found or invalid syntax (details logged)"
	logwrite "Apache configuration check" "$msg"
    fi
}

#
# Checks whether mod_mono is loaded
#
function check_suse_03_apache_00_mod_mono_loaded ()
{
    local tmp
    checking Whether the mod_mono Apache module is loaded
    
    if ! __find_apache2ctl; then
	return
    fi

    tmp=`$APACHE2CTL -M 2>&1|grep mono_module|tr -d ' '|cut -d '(' -f 1`
    if [ -z "$tmp" -o "$tmp" != "mono_module" ]; then
	failure "The mod_mono Apache module is not loaded or configuration syntax error (details logged)"
	tmp="`$APACHE2CTL -M 2>&1`"
	logwrite "Apache mod_mono load check" "$tmp"
    else
	success The mod_mono Apache module is loaded
    fi
}

#
# Checks whether mod_mono can be loaded
#
function check_suse_03_apache_01_mod_mono_loadable ()
{
    local module
    local tmp
    local libc
    checking Whether the mod_mono Apache module is loadable

    if ! __find_apache2_config_dir; then
	return
    fi

    if [ ! -f "$APACHE2_CONFIG_DIR/conf.d/mod_mono.conf" ]; then
	failure Unable to find mod_mono configuration
	return
    fi

    module=`sed -n $APACHE2_CONFIG_DIR/conf.d/mod_mono.conf -e "s/^\([ \t]*LoadModule\)[ \t]*\(mono_module\)[ \t]*\(.*\)/\3/pg"`
    if [ ! -f "$module" ]; then
	failure The mod_mono binary file does not exist at $module
	return
    fi

    case $OS_ARCH in
	64) libc="/lib64/libc.so" ;;
	32) libc="/lib/libc.so" ;;
	*) failure Unknown OS architecture $OS_ARCH
    esac

    tmp="`ldd $module`"
    if echo $tmp | grep "not found" > /dev/null 2>&1; then
	failure "mod_mono has unresolvable shared library dependencies (details logged)"
	logwrite "mod_mono loadability check" "$tmp"
	return
    fi

    if ! echo $tmp | grep $libc > /dev/null 2>&1; then
	failure "mod_mono might not be loadable on this architecture (${OS_ARCH}-bit, details logged)"
	logwrite "mod_mono loadability check" "$tmp"
	return
    fi

    success mod_mono Apache module is loadable
}

